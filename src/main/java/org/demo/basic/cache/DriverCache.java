/*
 * Very basic JavaBean cache
 * Created on 2017-01-30 ( Date ISO 2017-01-30 - Time 10:02:24 )
 * Generated by Telosys Tools Generator ( version 3.0.0 )
 */
package org.demo.basic.cache;

import java.util.Hashtable;
import java.util.Map;

import org.demo.basic.bean.Driver ;

/**
 * Very basic cache for Driver instances (just for the Telosys Tools demo)
 * 
 * @author Telosys Tools Generator
 *
 */
public class DriverCache
{
	private final static Map<String,Driver> cache = new Hashtable<String,Driver>() ;
	
	/**
	 * Build the cache key from the Primary Key field(s)
     * @param id 
	 * @return the key
	 */
	private final static String getKey( int id ) {
		return ""  + id  ;
	}

	/**
	 * Put the given Driver instance in the cache
	 * @param Driver instance to be stored
	 */
	public final static void putDriver(Driver driver ) {
		String key = getKey( driver.getId() ) ;
		cache.put(key, driver );
	}
	
	/**
	 * Get the Driver instance for the given primary key
     * @param id 
	 * @return the Driver instance (or null if none)
	 */
	public final static Driver getDriver( int id ) {
		String key = getKey( id ) ;
		return cache.get(key);
	}

	/**
	 * Removes the Driver associated with the given primary key
     * @param id 
	 */
	public final static void removeDriver ( int id ) {
		String key = getKey( id ) ;
		cache.remove(key);
	}
	
	/**
	 * Removes the given Driver from the cache using its primary key
	 * @param Driver instance to be removed
	 */
	public final static void removeDriver (Driver driver ) { 
		String key = getKey( driver.getId() ) ;
		cache.remove(key);
	}

}
